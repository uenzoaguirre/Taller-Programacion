// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using UTN.FRCU.ISI.TdP.AccountManager.DAL.EntityFramework;

namespace UTN.FRCU.ISI.TdP.AccountManager.Migrations
{
    [DbContext(typeof(AccountManagerDbContext))]
    [Migration("20211207201246_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.12")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("UTN.FRCU.ISI.TdP.AccountManager.Domain.Account", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int?>("ClientId")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<double>("OverdraftLimit")
                        .HasColumnType("double precision");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.ToTable("Accounts");
                });

            modelBuilder.Entity("UTN.FRCU.ISI.TdP.AccountManager.Domain.AccountMovement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int?>("AccountId")
                        .HasColumnType("integer");

                    b.Property<double>("Amount")
                        .HasColumnType("double precision");

                    b.Property<DateTime>("Date")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.ToTable("AccountMovements");
                });

            modelBuilder.Entity("UTN.FRCU.ISI.TdP.AccountManager.Domain.Client", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("DocumentNumber")
                        .HasColumnType("text");

                    b.Property<int?>("DocumentType")
                        .HasColumnType("integer");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.HasKey("Id");

                    b.HasIndex("DocumentType", "DocumentNumber");

                    b.ToTable("Clients");
                });

            modelBuilder.Entity("UTN.FRCU.ISI.TdP.AccountManager.Domain.Document", b =>
                {
                    b.Property<int>("Type")
                        .HasColumnType("integer");

                    b.Property<string>("Number")
                        .HasColumnType("text");

                    b.HasKey("Type", "Number");

                    b.ToTable("Document");
                });

            modelBuilder.Entity("UTN.FRCU.ISI.TdP.AccountManager.Domain.Account", b =>
                {
                    b.HasOne("UTN.FRCU.ISI.TdP.AccountManager.Domain.Client", "Client")
                        .WithMany("Accounts")
                        .HasForeignKey("ClientId");

                    b.Navigation("Client");
                });

            modelBuilder.Entity("UTN.FRCU.ISI.TdP.AccountManager.Domain.AccountMovement", b =>
                {
                    b.HasOne("UTN.FRCU.ISI.TdP.AccountManager.Domain.Account", null)
                        .WithMany("Movements")
                        .HasForeignKey("AccountId");
                });

            modelBuilder.Entity("UTN.FRCU.ISI.TdP.AccountManager.Domain.Client", b =>
                {
                    b.HasOne("UTN.FRCU.ISI.TdP.AccountManager.Domain.Document", "Document")
                        .WithMany()
                        .HasForeignKey("DocumentType", "DocumentNumber");

                    b.Navigation("Document");
                });

            modelBuilder.Entity("UTN.FRCU.ISI.TdP.AccountManager.Domain.Account", b =>
                {
                    b.Navigation("Movements");
                });

            modelBuilder.Entity("UTN.FRCU.ISI.TdP.AccountManager.Domain.Client", b =>
                {
                    b.Navigation("Accounts");
                });
#pragma warning restore 612, 618
        }
    }
}
