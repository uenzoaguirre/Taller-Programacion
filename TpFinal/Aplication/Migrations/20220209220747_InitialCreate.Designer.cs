// <auto-generated />
using System;
using Aplication.DAL.EntityFramework;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace Aplication.Migrations
{
    [DbContext(typeof(BibliotecaDbContext))]
    [Migration("20220209220747_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityByDefaultColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("Aplication.Edicion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .UseIdentityByDefaultColumn();

                    b.Property<int>("AñoEdicion")
                        .HasColumnType("integer");

                    b.Property<DateTime>("FechaPublicacion")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Isbn")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("NumeroPaginas")
                        .HasColumnType("integer");

                    b.Property<int?>("ObraId")
                        .HasColumnType("integer");

                    b.Property<string>("Portada")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("ObraId");

                    b.ToTable("Ediciones");
                });

            modelBuilder.Entity("Aplication.Ejemplar", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .UseIdentityByDefaultColumn();

                    b.Property<string>("CodigoInventario")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<int?>("EdicionId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("FechaAlta")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.HasIndex("EdicionId");

                    b.ToTable("Ejemplares");
                });

            modelBuilder.Entity("Aplication.Obra", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .UseIdentityByDefaultColumn();

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Lccn")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Obras");
                });

            modelBuilder.Entity("Aplication.Prestamo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .UseIdentityByDefaultColumn();

                    b.Property<int?>("EjemplarId")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("FechaDevolucion")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("FechaPrestamo")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("FechaVencimiento")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("SolicitanteId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("EjemplarId");

                    b.HasIndex("SolicitanteId");

                    b.ToTable("Prestamos");
                });

            modelBuilder.Entity("Aplication.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .UseIdentityByDefaultColumn();

                    b.Property<int>("Dni")
                        .HasColumnType("integer");

                    b.Property<bool>("EsAdministrador")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("FechaRegistro")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Mail")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("NombreUsuario")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("character varying(150)");

                    b.Property<int>("Puntaje")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("Aplication.Edicion", b =>
                {
                    b.HasOne("Aplication.Obra", "Obra")
                        .WithMany()
                        .HasForeignKey("ObraId");

                    b.Navigation("Obra");
                });

            modelBuilder.Entity("Aplication.Ejemplar", b =>
                {
                    b.HasOne("Aplication.Edicion", "Edicion")
                        .WithMany()
                        .HasForeignKey("EdicionId");

                    b.Navigation("Edicion");
                });

            modelBuilder.Entity("Aplication.Prestamo", b =>
                {
                    b.HasOne("Aplication.Ejemplar", "Ejemplar")
                        .WithMany()
                        .HasForeignKey("EjemplarId");

                    b.HasOne("Aplication.Usuario", "Solicitante")
                        .WithMany("Prestamos")
                        .HasForeignKey("SolicitanteId");

                    b.Navigation("Ejemplar");

                    b.Navigation("Solicitante");
                });

            modelBuilder.Entity("Aplication.Usuario", b =>
                {
                    b.Navigation("Prestamos");
                });
#pragma warning restore 612, 618
        }
    }
}
